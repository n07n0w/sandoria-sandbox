name: Deploy to EC2

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EC2
        env:
          SSH_HOST: ${{ secrets.EC2_HOST }}
          SSH_USER: ${{ secrets.EC2_USER }}
          SSH_PASSWORD: ${{ secrets.EC2_PASSWORD }}
        run: |
          # Install sshpass for password authentication
          sudo apt-get update
          sudo apt-get install -y sshpass

          # Create deployment script
          cat > deploy.sh << 'DEPLOY_SCRIPT'
          #!/bin/bash
          set -e

          echo "🚀 Starting deployment..."

          # Define variables
          APP_DIR="/home/$SSH_USER/sandoria-sandbox"
          REPO_URL="https://github.com/${{ github.repository }}.git"

          # Install required packages if not present
          echo "📦 Checking system dependencies..."
          if ! command -v node &> /dev/null; then
              echo "Installing Node.js 18..."
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt-get install -y nodejs
          fi

          if ! command -v git &> /dev/null; then
              echo "Installing Git..."
              sudo apt-get update
              sudo apt-get install -y git
          fi

          if ! command -v mysql &> /dev/null; then
              echo "Installing MySQL..."
              sudo apt-get install -y mysql-server
              sudo systemctl start mysql
              sudo systemctl enable mysql
          fi

          if ! command -v pm2 &> /dev/null; then
              echo "Installing PM2..."
              sudo npm install -g pm2
          fi

          # Clone or update repository
          if [ -d "$APP_DIR" ]; then
              echo "📥 Updating existing repository..."
              cd "$APP_DIR"
              git fetch origin
              git reset --hard origin/${{ github.ref_name }}
          else
              echo "📥 Cloning repository..."
              mkdir -p "$(dirname "$APP_DIR")"
              git clone "$REPO_URL" "$APP_DIR"
              cd "$APP_DIR"
              git checkout ${{ github.ref_name }}
          fi

          # Install dependencies
          echo "📦 Installing Node.js dependencies..."
          npm install --production

          # Setup environment file if it doesn't exist
          if [ ! -f .env ]; then
              echo "⚙️  Creating .env file..."
              cat > .env << 'ENV_FILE'
          # Database Configuration
          DB_HOST=localhost
          DB_PORT=3306
          DB_USER=root
          DB_PASSWORD=
          DB_NAME=sandbox

          # Application URLs
          BASE_URL=http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4):3000
          MAIN_SITE_URL=https://sandoria.org/

          # Server Configuration
          PORT=3000
          NODE_ENV=production

          # PeerJS Server Configuration
          PEER_SERVER_HOST=peer-server.sandoria.org
          PEER_SERVER_PORT=80
          PEER_SERVER_PATH=/
          PEER_SERVER_SECURE=false
          ENV_FILE
              echo "⚠️  Please update .env file with your database credentials!"
          fi

          # Initialize database
          echo "🗄️  Initializing database..."
          npm run db:init || echo "⚠️  Database initialization failed. Please check your DB credentials in .env"

          # Stop existing PM2 process if running
          echo "🔄 Restarting application..."
          pm2 delete sandoria-sandbox || true

          # Start application with PM2
          pm2 start bin/www --name sandoria-sandbox --time
          pm2 save

          # Setup PM2 to run on startup
          sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u $USER --hp /home/$USER

          echo "✅ Deployment completed successfully!"
          echo "📊 Application status:"
          pm2 status
          echo ""
          echo "🌐 Application should be available at: http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4):3000"
          echo ""
          echo "📝 Useful commands:"
          echo "  pm2 logs sandoria-sandbox    # View logs"
          echo "  pm2 restart sandoria-sandbox # Restart app"
          echo "  pm2 stop sandoria-sandbox    # Stop app"
          echo "  pm2 status                   # Check status"
          DEPLOY_SCRIPT

          chmod +x deploy.sh

          # Copy script to server and execute
          echo "📤 Uploading deployment script to server..."
          sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no deploy.sh $SSH_USER@$SSH_HOST:/tmp/deploy.sh

          echo "🔧 Executing deployment on server..."
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "bash /tmp/deploy.sh"

          echo "🎉 Deployment completed!"

      - name: Cleanup
        if: always()
        run: rm -f deploy.sh
