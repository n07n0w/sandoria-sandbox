<html>
<head>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.14.1/themes/base/jquery-ui.css">
<style>
:root {
  --header-height: 20%;
  --right-width-wo-uom: 45;
  --left-width-wo-uom: 25;
  --right-width: calc(var(--right-width-wo-uom) * 1%);
  --left-width: calc(var(--left-width-wo-uom) * 1%);
  --content-width-wo-uom: calc(100 - var(--right-width-wo-uom) - var(--left-width-wo-uom));
  --content-width:  calc(var(--content-width-wo-uom) * 1%);
  --main-height: calc(98% - var(--header-height));
  --border-radius: 25px;
  --top-buttons-middle-width: 70%;
}

body {
	margin: 0;
}

.all {
	position: relative;
	width: 100%;
	height: 100%;
}

.top {
	position: sticky;
	width: 100%;
	height: var(--header-height);
	border-bottom: 1px solid black;
}
.top td {
	border-bottom: 1px solid black;
}
.right {
	width: 20%;
	height: 100%;
	border-left: 1px solid black;
	vertical-align: top;
}
.main {
	height: var(--main-height);
	width: 100%;
	background-color: gray;
	overflow: hidden;
}
.content {
    width: var(--content-width);
    height: 100%;
    overflow-y: scroll;
    padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */
    box-sizing: content-box; /* So the width will be 100% + 17px */
}
.left {
	width: 15%;
	height: 100%;
	border-right: 1px solid black;
}
#top_menu {
<!--	float: left;-->
}
.top_menu_item {
	width: 80px;
	float: right;
	text-align: center;
	margin: 0 25px;
}
fieldset {
	border: none;
}
.ui-widget input {
    border-radius: var(--border-radius);
    margin: 5px;
    padding: 3px;
    height: 40px;
    text-indent: 10px;
}
.ui-widget.ui-widget-content {
	border: none;
}

#dialog-form, div[aria-describedby="dialog-form"] {
	border-radius: var(--border-radius);
	height: fit-content;
}
.ui-dialog-titlebar {
	background: transparent;
	border: none;
}
#middle {
	width: fit-content;
	margin-left: 100px;
}
#logo {
	width: fit-content;
	float: left;
}
.left_float {
	float: left;
}
.margin_left_20 {
	margin-left: 20px;
}
.topCategory {
	margin: 7px;
	float: left;
	width: 25px;
	height: 25px;
}
.topCategory img {
	width: 25px;
	height: 25px;
}
.images_hidden {
	display: none;
}
.category_image {
	max-width: 50px;
	max-height: 100px;
	float: left;
	margin: 10px;
}
#container {
	height: 100%;
}
</style>

  <script src="https://code.jquery.com/jquery-3.7.1.js"></script>
  <script src="https://code.jquery.com/ui/1.14.1/jquery-ui.js"></script>
  <!-- https://konvajs.org/docs/index.html -->
  <script src="https://unpkg.com/konva@9/konva.min.js"></script>
  <script src="https://unpkg.com/peerjs@1.5.4/dist/peerjs.min.js"></script>

  <script type="text/javascript">
      var sandboxBackground = "";
      var width = window.innerWidth;
      var height = window.innerHeight;
      var sandboxLayer;
      var background;
      var transformer;
      var myPeer;
      var myConn;

      function loadImage(imgSource, categoryId, imageId) {
          image = new Image();
          image.src = imgSource;
          console.log(image);

          var pic = new Konva.Image({
              image: image,
              x: image.x,
              y: image.y,
              draggable: true,
          });
          pic.setAttr('category', categoryId);
          pic.setAttr('imgId', imageId);
          pic.on('dragstart', function () {
              this.moveToTop();
          });
          pic.on('click', function () {
              transformer.nodes([pic]);
          });

//          transformer.nodes().push(pic);
          sandboxLayer.add(pic);
      }

      function removeSelected() {
          transformer.nodes().forEach(function (currentValue, index, arr) {
              currentValue.destroy();
              arr.splice(index, 1);
          });
          transformer.detach();
          sandboxLayer.draw();
      }

      function levelUp() {
          transformer.nodes().forEach(function (currentValue, index, arr) {
              currentValue.moveUp();
          });
      }

      function levelDown() {
          transformer.nodes().forEach(function (currentValue, index, arr) {
              currentValue.moveDown();
          });
      }

      function drawBackground(background, backgroundImg) {
        var context = background.getContext();
        context.drawImage(backgroundImg, 0, 0);
        context.setAttr('font', '20pt Calibri');
        context.setAttr('textAlign', 'center');
        context.setAttr('fillStyle', 'white');
      }

      function initStage() {
        let containerElement = $('#container');
        var stage = new Konva.Stage({
          container: 'container',
//          width: 578,
          width: containerElement.width(),
//          height: 530,
          height: containerElement.height(),
        });
        background = new Konva.Layer();
        sandboxLayer = new Konva.Layer();
//		sandboxLayer.opacity(0);

        var backgroundImage = new Image();
        backgroundImage.src = "/images/sandbox/sandbox.png";

        var backgroundRect = new Konva.Rect({
          x: 0,
          y: 0,
		  width: containerElement.width(),
		  height: containerElement.height(),
          fillPatternImage: backgroundImage
        });

        transformer = new Konva.Transformer({
//            keepRatio: true,
//            flipEnabled: true,
			enabledAnchors: ['top-left', 'top-right', 'bottom-left', 'bottom-right']
          });
        transformer.on('transform', function() {
            console.log('transform event');
        });
        transformer.on('transformstart', function() {
            console.log('transformstart event');
        });
        transformer.on('transformend', function() {
            console.log('transformend event');
        });
        transformer.on('dragstart', function() {
            console.log('dragstart event');
        });
        transformer.on('dragmove', function() {
            console.log('dragmove event');
        });
        transformer.on('dragend', function() {
            console.log('dragend event');
        });

        sandboxLayer.add(transformer);
	sandboxLayer.on('mouseover', function() {
		console.log('mouseover event');
	});
	sandboxLayer.on('mousemove', function() {
		console.log('mousemove event');
	});
	sandboxLayer.on('mouseout', function() {
		console.log('mouseout event');
	});
	sandboxLayer.on('mouseenter', function() {
		console.log('mouseenter event');
	});
	sandboxLayer.on('mouseleave', function() {
		console.log('mouseleave event');
	});
	sandboxLayer.on('mousedown', function() {
		console.log('mousedown event');
	});
	sandboxLayer.on('mouseup', function() {
		console.log('mouseup event');
	});
	sandboxLayer.on('wheel', function() {
		console.log('wheel event');
	});
	sandboxLayer.on('contextmenu', function() {
		console.log('contextmenu event');
	});
	sandboxLayer.on('click', function(evt) {
		var shape = evt.target;
		var group = evt.currentTarget;
		console.log('click event');
		console.log(shape);
		console.log(typeof shape);
		console.log(group);
		console.log(typeof group);
	});
	sandboxLayer.on('dblclick', function() {
		console.log('dblclick event');
	});
	sandboxLayer.on('touchstart', function() {
		console.log('touchstart event');
	});
	sandboxLayer.on('touchmove', function() {
		console.log('touchmove event');
	});
	sandboxLayer.on('touchend', function() {
		console.log('touchend event');
	});
	sandboxLayer.on('tap', function() {
		console.log('tap event');
	});
	sandboxLayer.on('dbltap', function() {
		console.log('dbltap event');
	});
	sandboxLayer.on('dragstart', function() {
		console.log('dragstart event');
	});
	sandboxLayer.on('dragmove', function() {
		console.log('dragmove event');
	});
	sandboxLayer.on('dragend', function() {
		console.log('dragend event');
	});

//		sandboxLayer.add(backgroundRect);
        stage.add(background);
        stage.add(sandboxLayer);

		background.add(backgroundRect);

        drawBackground(
          background,
//          sandboxLayer,
          backgroundImage
        );
      }

  $( function() {
    var dialog, form,
 
      // From https://html.spec.whatwg.org/multipage/input.html#e-mail-state-%28type=email%29
      emailRegex = /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
      name = $( "#name" ),
      email = $( "#email" ),
      password = $( "#password" ),
      allFields = $( [] ).add( name ).add( email ).add( password ),
      tips = $( ".validateTips" );
 
      myPeer = new Peer("<%= sessionId %>");
      myPeer.on('open', function(id) {
        console.log('My peer ID is: ' + id);
        
        myConn = myPeer.connect('<%= opponentSessionId %>');
        myConn.on('open', function(){
            console.log(myConn);
            myConn.send('hi!');
        });
    });
    

    function updateTips( t ) {
      tips
        .text( t )
        .addClass( "ui-state-highlight" );
      setTimeout(function() {
        tips.removeClass( "ui-state-highlight", 1500 );
      }, 500 );
    }
 
    function checkLength( o, n, min, max ) {
      if ( o.val().length > max || o.val().length < min ) {
        o.addClass( "ui-state-error" );
        updateTips( "Length of " + n + " must be between " +
          min + " and " + max + "." );
        return false;
      } else {
        return true;
      }
    }
 
    function checkRegexp( o, regexp, n ) {
      if ( !( regexp.test( o.val() ) ) ) {
        o.addClass( "ui-state-error" );
        updateTips( n );
        return false;
      } else {
        return true;
      }
    }
 
    var prevShownCategoryId = "01";
    function showImages(catecory) {
	$("#images_" + prevShownCategoryId).hide();
	prevShownCategoryId = catecory;
	$("#images_" + prevShownCategoryId).show();
    }

    function addUser() {
      var valid = true;
      allFields.removeClass( "ui-state-error" );
 
      valid = valid && checkLength( name, "username", 3, 16 );
      valid = valid && checkLength( email, "email", 6, 80 );
      valid = valid && checkLength( password, "password", 5, 16 );
 
      valid = valid && checkRegexp( name, /^[a-z]([0-9a-z_\s])+$/i, "Username may consist of a-z, 0-9, underscores, spaces and must begin with a letter." );
      valid = valid && checkRegexp( email, emailRegex, "eg. ui@jquery.com" );
      valid = valid && checkRegexp( password, /^([0-9a-zA-Z])+$/, "Password field only allow : a-z 0-9" );
 
      if ( valid ) {
        $( "#users tbody" ).append( "<tr>" +
          "<td>" + name.val() + "</td>" +
          "<td>" + email.val() + "</td>" +
          "<td>" + password.val() + "</td>" +
        "</tr>" );
        dialog.dialog( "close" );
      }
      return valid;
    }

	var imagesRightPanel = $(".right");
	$( ".images_hidden" ).each(function(){
		$(this).remove();
		imagesRightPanel.append($(this));
	});

	$( "#tabs" ).tabs();

    dialog = $( "#dialog-form" ).dialog({
      autoOpen: false,
      height: 400,
      width: 400,
      modal: true,
      close: function() {
        form[ 0 ].reset();
        allFields.removeClass( "ui-state-error" );
      }
    });

    $(".topCategory").on("click", function() {
      showImages($(this).attr("cid"));
    });

    $( "#login" ).on( "click", function() {
      dialog.dialog( "open" );
    });

	initStage();
  } );
  </script>
</head>
<body>
	<table width="100%" height="100%" cellpadding="0" cellspacing="0">
		<tr class="top">
			<td colspan="2" id="top_menu">
				<div id="logo">
					<div style="width: fit-content; float: left;">
						<img src="/images/svg/sandboxLogo.svg">
					</div>
					<div style="text-align: center; float: left;">
						Онлайн песочница<br/>
						<b>Will Free</b>
					</div>
				</div>

				<div id="middle" class="top_menu_item left_float">
					<div class="top_menu_item left_float">
						<span>
							<img src="/images/svg/save.svg">
						</span>
						<span>
							Сохранить
						</span>
					</div>
					<div class="top_menu_item left_float">
						<span>
							<img src="/images/svg/clearAll.svg">
						</span>
						<span>
							Очистить все
						</span>
					</div>
					<div class="top_menu_item left_float">
						<span>
							<img src="/images/svg/rotateSandbox.svg">
						</span>
						<span>
							Повернуть песочницу
						</span>
					</div>
					<div class="top_menu_item left_float margin_left_20" onclick="levelDown()">
						<span>
							<img src="/images/svg/layerUp.svg">
						</span>
						<span>
							На задний план
						</span>
					</div>
					<div class="top_menu_item left_float" onclick="levelUp()">
						<span>
							<img src="/images/svg/layerDown.svg">
						</span>
						<span>
							На передний план
						</span>
					</div>
					<div class="top_menu_item left_float" onclick="removeSelected()">
						<span>
							<img src="/images/svg/remove.svg">
						</span>
						<span>
							Удалить
						</span>
					</div>
				</div>

			</td>
			<td id="top_categories" style="border-left: 1px solid black;">
				<%  for (let key in categories){ 
					let category = categories[key];
				%>
					<div class="topCategory" cid="<%= category.id %>">
						<img src="<%= category.icon %>" title="<%= category.title %>" alt="<%= category.title %>"/>
					</div>
					<div id="images_<%= category.id %>" class="images_hidden">
					<%  for (let image of category.images){ %>
						<img class="category_image" src="<%= image.image %>" title="<%= image.title %>" onclick="loadImage(this.src, '<%= category.id %>', '<%= image.id %>')"/>
					<%  } %>
					</div>
				<%  } %>
			</td>
		</tr>
		<tr>
			<td class="left" style="vertical-align: top; padding-top: 20px;">
				<p style="text-align: center;"><b>Сохраненные<br/>итерации</b></p>
			</td>
			<td class="sandbox" id="main">
				<div id="container"></div>
			</td>
			<td class="right">
			</td>
		</tr>
	</table>

<div id="dialog-form">
<div id="tabs">
  <ul>
    <li><a href="#tabs-1">Вход</a></li>
    <li><a href="#tabs-2">Регистрация</a></li>
  </ul>
  <div id="tabs-1">
    <form action="/auth" method="POST">
      <fieldset>
        <input type="text" name="email" id="email" class="text ui-widget-content ui-corner-all" placeholder="Введите почту">
        <input type="password" name="password" id="password" class="text ui-widget-content ui-corner-all" placeholder="Введите пароль">

        <!-- Allow form submission with keyboard without duplicating the dialog button -->
        <input type="submit" tabindex="-1" value="Войти в аккаунт">
      </fieldset>
    </form>
  </div>
  <div id="tabs-2">
    <form action="/register" method="POST">
      <fieldset>
        <input type="text" name="name" id="name" class="text ui-widget-content ui-corner-all" placeholder="Ваше имя">
        <input type="text" name="email" id="email" class="text ui-widget-content ui-corner-all" placeholder="Введите почту">
        <input type="password" name="password" id="password" class="text ui-widget-content ui-corner-all" placeholder="Придумйте пароль">

        <!-- Allow form submission with keyboard without duplicating the dialog button -->
        <input type="submit" tabindex="-1" value="Зарегистрироваться">
		<p>Нажимая кнопку "Зарегистрироваться", я даю свое согласие на сбор и обработку моих персональных данных в соответствии с <a href="#" target="blank">Политикой</a> и принимаю условия <a href="#" target="blank">Пользовательствого соглащения</a></p>
      </fieldset>
    </form>
  </div>
</div> 
</div>

</body>
</html>